{"version":3,"sources":["components/Header.js","components/Todos/Todo.js","components/Todos/Todos.js","components/Todos/TodosForm.js","views/TodoList.js","App.js","reportWebVitals.js","registerServiceWorker.js","index.js"],"names":["Header","Todo","props","todo","id","title","done","className","onClick","changeTodoCompletion","icon","editMode","size","deleteTodo","Todos","todos","map","length","TodoForm","useState","newTitle","setNewTitle","editRender","setEditRender","mode","btnString","showUncomplete","type","placeholder","onChange","event","target","value","nTitle","addTodos","disabled","trim","TodoList","initialState","localStorage","getItem","JSON","parse","state","aciveTodos","this","setToLocal","setItem","stringify","setTodos","setState","setAciveTodos","setMode","currentTodos","filter","TodosForm","newTodo","Date","now","newTodos","el","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa4ca59f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n    \t<h1> Todo List </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport FeatherIcon from 'feather-icons-react';\n\nconst Todo = (props) => {\n\n\tlet {id , title , done} = props.todo;\n\n\treturn (\n\t\t<div className={ done ? \"todos-todo done\": \"todos-todo\"}>\n\t\t\t<div \n\t\t\t\tclassName=\"todos-todo_icon\" \n\t\t\t\tonClick={() => props.changeTodoCompletion(id)}>\n\t\t\t\t<FeatherIcon icon={done ? \"check-circle\" : \"circle\"} />\n\t\t\t</div>\n\t\t\t<div className=\"todos-todo_text\">{title}</div>\n\t\t\t<div className=\"todos-todo_cta\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"todos-todo_cta-edit\" \n\t\t\t\t\tonClick={() => props.editMode(props.todo)}>\n\t\t\t\t\t<FeatherIcon icon=\"edit\" size=\"20\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"todos-todo_cta-delete\" onClick={() => props.deleteTodo(id)}>\n\t\t\t\t\t<FeatherIcon icon=\"trash-2\" size=\"20\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo'\nconst Todos = (props) => {\n  return (\n    <div className=\"todos-list\">\n    \t{\n    \t\tprops.todos.map((todo) => {\n    \t\t\treturn (<Todo \n\t\t    \t\t\t\ttodo={todo} \n\t\t    \t\t\t\tkey={todo.id} \n\t\t    \t\t\t\tchangeTodoCompletion={props.changeTodoCompletion} \n\t\t    \t\t\t\tdeleteTodo={props.deleteTodo} \n\t\t    \t\t\t\teditMode={props.editMode} \n    \t\t\t\t\t/>\n    \t\t\t)\n    \t\t})\n    \t}\n    \t{\n    \t\tprops.todos.length === 0 ? (\n    \t\t\t<h3 className=\"no-todos\">ﻻ يوجد مهام حالية ....</h3>\n\n    \t\t) : null\n    \t}\n    </div>\n  );\n}\n\nexport default Todos;\n","import React , { useState } from 'react';\nimport FeatherIcon from 'feather-icons-react';\n\nconst TodoForm = (props) => {\n\n    let [newTitle , setNewTitle] = useState(\"\")\n    let [editRender , setEditRender] = useState(false)\n\n    if (props.mode === \"edit\" && !editRender) {\n        setNewTitle(props.todos[0].title);\n        setEditRender(true)\n    }\n\n    let newTitleHandler = (event) => {\n        setNewTitle(event.target.value)\n    }\n\n    let addNewTitle = () => {\n        let nTitle = newTitle\n        setNewTitle(\"\")\n        setEditRender(false)\n        return props.addTodos(nTitle)\n    }\n\n    let btnString = \"Edit\";\n\n    props.mode === \"edit\" ? (btnString = \"Edit...\") : (btnString = \"Add\")\n\n    return (\n    <div className=\"todos-form\">\n    \t<div className=\"todos-form_icon\" onClick={props.showUncomplete}>\n    \t\t<FeatherIcon icon=\"circle\" />\n    \t</div>\n    \t<div className=\"todos-form_form\">\n    \t\t<input type=\"text\" placeholder=\"Add New Mession....\" onChange={newTitleHandler} value={newTitle} />\n    \t</div>\n    \t<div className=\"todos-form_submit\">\n    \t\t<button \n                className=\"btn\" \n                onClick={addNewTitle} \n                disabled={newTitle.trim() ? false : true}>{btnString}\n            </button>\n    \t</div>\n    </div>\n    );\n}\n\nexport default TodoForm;\n","import React , { Component } from 'react';\nimport Todos from '../components/Todos/Todos'\nimport TodosForm from '../components/Todos/TodosForm'\n\nclass TodoList extends Component {\n\n\t// let initialState = [\n\t// \t{id: 1 , title: \"شراء مستلزمات\" , done: false },\n\t// \t{id: 2 , title: \"شراء منتجات\" , done: false },\n\t// \t{id: 3 , title: \"مشاهدة كورس ريأكت\" , done: false },\n\t// \t{id: 4 , title: \"كتابة كود المشروع الجديد\" , done: false }\n\t// ]\n\n\tinitialState = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : []\n\n\t// mode => add || \"not-done\" || edit\n\tstate = {\n\t\ttodos: this.initialState,\n\t\taciveTodos:{},\n\t\tmode:\"add\"\n\t}\n\n\trender(){\n\n\t\tlet {todos , aciveTodos , mode} = this.state;\n\n\t\tconst setToLocal = (todos) => {\n\t\t\tlocalStorage.setItem(\"todos\" , JSON.stringify(todos))\n\t\t}\n\n\t\tconst setTodos = (todos) => {\n\t\t\tthis.setState({todos})\n\t\t}\n\n\t\tconst setAciveTodos = (todo) => {\n\t\t\tthis.setState({aciveTodos:todo})\n\t\t}\n\n\t\tconst setMode = (mode) => {\n\t\t\tthis.setState({mode})\n\t\t}\n\n\t\tconst changeTodoCompletion = (id) => {\n\t\t\tlet curTodos = [...todos];\n\t\t\tlet newTodos = curTodos.map((el) => {\n\t\t\t\tif (el.id === id) {\n\t\t\t\t\tel.done = !el.done\n\t\t\t\t\treturn el\n\t\t\t\t}\n\t\t\t\treturn el\n\t\t\t})\n\t\t\tsetToLocal(newTodos)\n\t\t\tsetTodos(newTodos)\n\t\t}\n\n\t\tlet deleteTodo = (id) => {\n\t\t\tlet curTodos = [...todos];\n\t\t\tlet newTodos = curTodos.filter((el) => el.id !== id)\n\t\t\tsetToLocal(newTodos)\n\t\t\tsetTodos(newTodos)\n\t\t}\n\n\t\tlet addTodos = (title) => {\n\n\t\t\tif (mode !== 'edit') {\n\t\t\t\tlet newTodo = {\n\t\t\t\t\tid:Date.now(),\n\t\t\t\t\ttitle:title,\n\t\t\t\t\tdone:false\n\t\t\t\t}\n\n\t\t\t\tlet newTodos = [...todos , newTodo];\n\t\t\t\tsetToLocal(newTodos)\n\t\t\t\tsetTodos(newTodos)\n\t\t\t\t\n\t\t\t}else{\n\n\t\t\t\tlet curTodos = [...todos];\n\t\t\t\tlet newTodos = curTodos.map((el) => {\n\t\t\t\t\tif (el.id === aciveTodos.id) {\n\t\t\t\t\t\tel.title = title\n\t\t\t\t\t\treturn el\n\t\t\t\t\t}\n\t\t\t\t\treturn el\n\t\t\t\t});\n\t\t\t\tsetToLocal(newTodos)\n\t\t\t\tsetTodos(newTodos)\n\t\t\t\tsetAciveTodos({})\n\t\t\t\tsetMode(\"add\")\n\t\t\t}\n\t\t}\n\n\t\tlet showUncomplete = () => {\n\t\t\t// if (mode === 'not-done') {\n\t\t\t// \tsetMode(\"add\")\n\t\t\t// }else\n\t\t\t// {\n\t\t\t// \tsetMode(\"not-done\")\n\t\t\t// }\n\n\t\t\tmode === 'not-done' ? setMode(\"add\") : setMode(\"not-done\")\n\t\t}\n\n\t\tlet currentTodos = [...todos]\n\n\t\tif (mode === 'not-done') {\n\n\t\t\tcurrentTodos = currentTodos.filter((todo) => !todo.done)\n\t\t}\n\n\t\tlet editMode = (todo) => {\n\t\t\tsetMode(\"edit\")\n\t\t\tsetAciveTodos(todo)\n\t\t}\n\n\n\t\treturn (\n\t\t\t<main>\n\t\t    <div className=\"container\">\n\t\t    \t<div className=\"todos\">\n\t\t    \t\t<TodosForm \n\t\t    \t\t\taddTodos={addTodos} \n\t\t    \t\t\tshowUncomplete={showUncomplete} \n\t\t    \t\t\tmode={mode} \n\t\t    \t\t\ttodos={mode !== \"edit\" ? currentTodos : [aciveTodos]}\n\t\t    \t\t/>\n\t\t    \t\t<Todos \n\t\t    \t\t\ttodos={ mode !== 'edit' ? currentTodos : [aciveTodos]} \n\t\t    \t\t\tchangeTodoCompletion={changeTodoCompletion} \n\t\t    \t\t\tdeleteTodo={deleteTodo} \n\t\t    \t\t\teditMode={editMode} \n\t\t    \t\t/>\n\t\t    \t</div>\n\t\t    </div>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n// import BoxContent from './components/BoxContent/BoxContent'\nimport Header from './components/Header'\nimport TodoList from './views/TodoList'\n\n\n      // <h1>Todo List</h1>\n      // <BoxContent />\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \t<Header />\n    \t<TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// This For increse The Speed Of Reload Of The Page React From Throgh Add The Page In The Cach\nregisterServiceWorker();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}